---

# to avoid error at install. unity only? (bluez* gnome-bluetooth* gnome-user-share* indicator-bluetooth*
#       unity-control-center* unity-control-center-signon*)
#bluez package
#systemctl disable bluetooth.service
- name: bluez package install
  apt:
    name: bluez
    state: present
  ignore_errors: true
  register: pkg_result
  until: pkg_result is success
- name: disable bluetooth service
  service: name=bluetooth state=stopped enabled=no

- name: Trusty | SIFT x11 packages install (unity)
  apt:
    name:
      - xinit
      - ubuntu-desktop
      - ubuntu-session
      - unity-greeter
## conflicts file /usr/bin/vba_extract.py between python-xlsxwriter (required by plaso, python-plaso) and
##      python3-xlsxwriter (required by ubuntu-desktop chain)
    state: present
  when: sift_x11_env is defined and sift_x11_env and ansible_distribution_release == 'trusty'
## mostly for travis to avoid stalling "No output has been received in the last 10m0s"...
  async: 1200
  poll: 15
  register: pkg_result
  until: pkg_result is success

- name: Xenial | SIFT x11 packages install (lxde)
  apt:
    name:
      - xinit
      - lxde
      - lxdm
    state: present
  when: sift_x11_env is defined and sift_x11_env and ansible_distribution_release == 'xenial'
## mostly for travis to avoid stalling "No output has been received in the last 10m0s"...
  async: 600
  poll: 15
  register: pkg_result
  until: pkg_result is success

- name: x11 ensure desktop-directories exists
  file:
    dest: "/home/{{ sift_user }}/.local/share/desktop-directories"
    mode: '0700'
    owner: "{{ sift_user }}"
    state: directory
- name: adding sift directory shortcut
  copy:
    src: sift.directory
    dest: "/home/{{ sift_user }}/.local/share/desktop-directories/sift.directory"
    mode: '0644'
    owner: "{{ sift_user }}"

- name: disable GUI upgrade prompt
  replace: dest=/etc/update-manager/release-upgrades regexp='^Prompt=.*' replace='Prompt=never'
  when: ansible_distribution_release == 'trusty'

- name: ensure unity-greeter directory exists
  file: dest=/usr/share/unity-greeter state=directory mode=0755
- name: Check if /usr/share/unity-greeter/logo.png exists
  stat: path=/usr/share/unity-greeter/logo.png
  register: logoubuntu1
- name: Check if /usr/share/unity-greeter/logo.png.ubuntu exists
  stat: path=/usr/share/unity-greeter/logo.png.ubuntu
  register: logoubuntu2
- name: backup ubuntu unity greeter logo
  copy:
    src: /usr/share/unity-greeter/logo.png
    dest: /usr/share/unity-greeter/logo.png.ubuntu
    owner: "{{ sift_user }}"
  when: not logoubuntu2.stat.exists and logoubuntu1.stat.exists
- name: copy sift unity greeter logo
  copy:
    src: /usr/share/sift/images/login_logo.png
    dest: /usr/share/unity-greeter/logo.png
    owner: "{{ sift_user }}"
  when: not logoubuntu1.stat.exists

- include: trusty-bugs.yml
  when: ansible_distribution_release == 'trusty'

- name: Setting up auto-login for user {{ sift_user }}
  lineinfile:
    dest: '/etc/lxdm/lxdm.conf'
    regexp: "{{ item.regexp }}"
    line: "{{ item.replace }}"
    create: true
  with_items:
    - { regexp: '^autologin=.*', replace: "autologin={{ sift_user }}" }
    - { regexp: '^disable=.*', replace: 'disable=1' }
  when: sift_autologin

## Manual or alternative
## https://github.com/jistr/ansible-gsetting
## https://github.com/JBKahn/provisioning-local/tree/master/ansible_modules/{dconf,gconftool-2,gsettings}
- name: SIFT Wallpaper Configuration
  command: "{{ item }}"
  with_items:
    - "gsettings set org.gnome.desktop.background picture-uri file:///usr/share/sift/images/forensics_blue.jpg"
  ignore_errors: true
  become: yes
  become_user: "{{ sift_user }}"
  when: sift_x11_background is defined and sift_x11_background
- name: Set desktop background with gsettings
  command: gsettings set com.canonical.unity-greeter background file:///usr/share/sift/images/forensics_blue.jpg
  when: ansible_distribution_version == '12.04' and sift_x11_background is defined and sift_x11_background

- name: SIFT Configuration Function
  command: "{{ item }}"
  with_items:
    - "gsettings set org.gnome.desktop.background picture-uri file:///usr/share/sift/images/forensics_blue.jpg"
## stderr: No such schema 'com.canonical.Unity.Launcher'
    - "gsettings set com.canonical.Unity.Launcher favorites \"['application://nautilus.desktop', 'application://gnome-terminal.desktop', 'application://firefox.desktop', 'application://gnome-screenshot.desktop', 'application://gcalctool.desktop', 'application://bless.desktop', 'application://autopsy.desktop', 'application://wireshark.desktop']\""
  ignore_errors: true
  become: yes
  become_user: "{{ sift_user }}"
  when: sift_x11_env is defined and sift_x11_env

- name: Autostart folder
  file: path="{{ item }}" state=directory mode=0700 owner={{ sift_user }} group={{ sift_user }}
  with_items:
    - "/home/{{ sift_user }}/.config/autostart"

- name: Check if /usr/share/sift/other/gnome-terminal.desktop exists
  stat: path=/usr/share/sift/other/gnome-terminal.desktop
  register: gtd
- name: autostart sift gnome-terminal
  copy:
    src: /usr/share/sift/other/gnome-terminal.desktop
    dest: "/home/{{ sift_user }}/.config/autostart/gnome-terminal.desktop"
    owner: "{{ sift_user }}"
    remote_src: true
  when: gtd.stat.exists

- name: symlink sift forensics background
  file:
    src: /usr/share/sift/images/forensics_blue.jpg
    dest: /usr/share/backgrounds/warty-final-ubuntu.png
    mode: 0644
    state: link
    force: yes
  when: sift_x11_background is defined and sift_x11_background
