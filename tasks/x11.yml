---

# to avoid error at install. unity only? (bluez* gnome-bluetooth* gnome-user-share* indicator-bluetooth*
#       unity-control-center* unity-control-center-signon*)
#bluez package
#systemctl disable bluetooth.service
- name: bluez package install
  apt:
    name: bluez
    state: present
  ignore_errors: true
  register: pkg_result
  until: pkg_result is success
- name: disable bluetooth service
  service: name=bluetooth state=stopped enabled=no

- name: Trusty | SIFT x11 packages install (unity)
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - xinit
    - ubuntu-desktop
    - ubuntu-session
    - unity-greeter
## conflicts file /usr/bin/vba_extract.py between python-xlsxwriter (required by plaso, python-plaso) and
##      python3-xlsxwriter (required by ubuntu-desktop chain)
  when: sift_x11_env is defined and sift_x11_env and ansible_distribution_release == 'trusty'
## mostly for travis to avoid stalling "No output has been received in the last 10m0s"...
  async: 1200
  poll: 15
  register: pkg_result
  until: pkg_result is success

- name: Xenial | SIFT x11 packages install (lxde)
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - xinit
    - lxde
    - lxdm
  when: sift_x11_env is defined and sift_x11_env and ansible_distribution_release == 'xenial'
## mostly for travis to avoid stalling "No output has been received in the last 10m0s"...
  async: 600
  poll: 15
  register: pkg_result
  until: pkg_result is success

- name: x11 ensure desktop-directories exists
  file:
    dest: "/home/{{ sift_user }}/.local/share/desktop-directories"
    mode: '0700'
    owner: "{{ sift_user }}"
    state: directory
- name: adding sift directory shortcut
  copy:
    src: sift.directory
    dest: "/home/{{ sift_user }}/.local/share/desktop-directories/sift.directory"
    mode: '0644'
    owner: "{{ sift_user }}"

- name: disable GUI upgrade prompt
  replace: dest=/etc/update-manager/release-upgrades regexp='^Prompt=.*' replace='Prompt=never'
  when: ansible_distribution_release == 'trusty'

- name: ensure unity-greeter directory exists
  file: dest=/usr/share/unity-greeter state=directory mode=0755
- name: Check if /usr/share/unity-greeter/logo.png exists
  stat: path=/usr/share/unity-greeter/logo.png
  register: logoubuntu1
- name: Check if /usr/share/unity-greeter/logo.png.ubuntu exists
  stat: path=/usr/share/unity-greeter/logo.png.ubuntu
  register: logoubuntu2
- name: backup ubuntu unity greeter logo
  copy:
    src: /usr/share/unity-greeter/logo.png
    dest: /usr/share/unity-greeter/logo.png.ubuntu
    owner: "{{ sift_user }}"
  when: not logoubuntu2.stat.exists and logoubuntu1.stat.exists
- name: copy sift unity greeter logo
  copy:
    src: /usr/share/sift/images/login_logo.png
    dest: /usr/share/unity-greeter/logo.png
    owner: "{{ sift_user }}"
  when: not logoubuntu1.stat.exists

- include: trusty-bugs.yml
  when: ansible_distribution_release == 'trusty'
